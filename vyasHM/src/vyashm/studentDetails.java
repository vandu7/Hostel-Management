/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vyashm;
import java.sql.*;
import javax.swing.JOptionPane;
import java.sql.Date;
import java.time.LocalDate;
/**
 *
 * @author HOME
 */
public class studentDetails extends javax.swing.JFrame {
Connection con;

 int count,saved;
    /**
     * Creates new form studentDetails
     */
    public studentDetails() {
        initComponents();
        try{
    
      
			Class.forName("oracle.jdbc.driver.OracleDriver");
			String jdbcurl="jdbc:oracle:thin:system/password//localhost:1521/xe";
		 con=DriverManager.getConnection(jdbcurl);  
        
        
    }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        sName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        rType = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        feePaid = new javax.swing.JTextField();
        submitButton = new javax.swing.JButton();
        roomnoCombo = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        totalFee = new javax.swing.JTextField();
        pick = new org.jdesktop.swingx.JXDatePicker();
        jLabel6 = new javax.swing.JLabel();
        gender = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Student Details");

        jLabel2.setText("Name:");

        sName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sNameKeyTyped(evt);
            }
        });

        jLabel3.setText("Room No.:");

        jLabel4.setText("Room type:");

        rType.setEditable(false);

        jLabel5.setText("Fee Paid:");

        feePaid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                feePaidKeyTyped(evt);
            }
        });

        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        roomnoCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomnoComboActionPerformed(evt);
            }
        });

        jLabel7.setText("Annual Fee:");

        totalFee.setEditable(false);

        jLabel6.setText("Gender:");

        gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "male", "female" }));
        gender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderActionPerformed(evt);
            }
        });

        jLabel8.setText("Date:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(96, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(totalFee, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(pick, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(feePaid, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(sName, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(rType, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(roomnoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(140, 140, 140))
            .addGroup(layout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(199, 199, 199)
                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sName, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(gender, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomnoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rType, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalFee, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(feePaid, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pick, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(4, 4, 4)))
                .addGap(28, 28, 28)
                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 67, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        
        
        
        String sname=sName.getText();
       String gendr=(String)gender.getSelectedItem();
        int rno=(Integer)roomnoCombo.getSelectedItem();
        String rtype=rType.getText();
        float feepd=Float.parseFloat(feePaid.getText());
        /*java.util.Date date = new java.util.Date();
      long t = date.getTime();
      java.sql.Date sqlDate = new java.sql.Date(t);*/
        //String adate=doa.getString();
        float feeTotal=Float.parseFloat(totalFee.getText());
        try{
            java.util.Date d=pick.getDate();
            java.sql.Date sqlDate = new java.sql.Date(d.getTime());
             PreparedStatement pst=con.prepareStatement("select count(room_no) from student where room_no=?");
            pst.setInt(1,rno);
            ResultSet rs=pst.executeQuery();
            while(rs.next())
            {
                count=rs.getInt(1);
                System.out.println(count);
            }
            pst=con.prepareStatement("select capacity from rooms where room_no=?");
            pst.setInt(1, rno);
            rs=pst.executeQuery();
            while(rs.next())
            {
                saved=rs.getInt(1);
                System.out.println(saved);
            }
            if((saved-count)==0)
            {
                JOptionPane.showMessageDialog(this,"No vacant seat","error",JOptionPane.PLAIN_MESSAGE);
                
            }
            else
            {
           pst=con.prepareStatement("insert into student(s_no,room_no,name,r_type,fee_paid,fee_due,check_in,gender) values(?,?,?,?,?,?,?,?)");
            pst.setInt(1,1);
            
            pst.setInt(2,rno);
            pst.setString(3,sname);
            pst.setString(4,rtype);
            pst.setFloat(5,feepd);
            pst.setFloat(6,feeTotal-feepd);
            pst.setDate(7, sqlDate);
            pst.setString(8, gendr);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this,"Inserted Successfully","congratulations",JOptionPane.PLAIN_MESSAGE);
            
            pst=con.prepareStatement("select count(room_no) from student where room_no=?");
            pst.setInt(1,rno);
            rs=pst.executeQuery();
            while(rs.next())
            {
                count=rs.getInt(1);
                System.out.println(count);
            }
            pst=con.prepareStatement("select capacity from rooms where room_no=?");
            pst.setInt(1, rno);
            rs=pst.executeQuery();
            while(rs.next())
            {
                saved=rs.getInt(1);
                System.out.println(saved);
            }
            pst=con.prepareStatement("update rooms set vacant=? where room_no=?");
            pst.setInt(1, saved-count);
            pst.setInt(2, rno);
            pst.executeUpdate();
            }
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    
    
    
    private void roomnoComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomnoComboActionPerformed
        
        try{
        String sql="select r_type from rooms where room_no=?";
        int roomno=(Integer)roomnoCombo.getSelectedItem();
        PreparedStatement st=con.prepareStatement(sql);
        st.setInt(1,roomno);
        ResultSet rs=st.executeQuery();
        while(rs.next())
        {
            String r_type=rs.getString(1);
            rType.setText(r_type);
        }
        
        sql="select fee from rooms where room_no=?";
        st=con.prepareStatement(sql);
        st.setInt(1,roomno);
        rs=st.executeQuery();
        while(rs.next())
        {
            String fee=rs.getString(1);
            totalFee.setText(fee);
        }
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
        
    }//GEN-LAST:event_roomnoComboActionPerformed

    private void sNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sNameKeyTyped
        char letter=evt.getKeyChar();
        if(Character.isDigit(letter))
        {
            evt.consume();
        }
    }//GEN-LAST:event_sNameKeyTyped

    private void feePaidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_feePaidKeyTyped
        char letter=evt.getKeyChar();
        if(!(Character.isDigit(letter)))
        {
            evt.consume();
        }
    }//GEN-LAST:event_feePaidKeyTyped

    private void genderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderActionPerformed
        // TODO add your handling code here:
        try{
            String gendr=(String)gender.getSelectedItem();
            if(gendr.equalsIgnoreCase("male"))
            {
                if(roomnoCombo.getSelectedIndex()!=-1)
                {
                    roomnoCombo.removeAllItems();
                }
        String sql="select room_no from rooms where build=? and vacant!=0";
        PreparedStatement st=con.prepareStatement(sql);
        st.setString(1, "build1");
        ResultSet rs=st.executeQuery();
        
        while(rs.next())
        {
            int r_no=rs.getInt(1);
            roomnoCombo.addItem(r_no);
        }
            }
            else
            {
                if(roomnoCombo.getSelectedIndex()!=-1)
                {
                    roomnoCombo.removeAllItems();
                }
                String sql="select room_no from rooms where build=? and vacant!=0";
        PreparedStatement st=con.prepareStatement(sql);
        st.setString(1, "build2");
        ResultSet rs=st.executeQuery();
        
        while(rs.next())
        {
            int r_no=rs.getInt(1);
            roomnoCombo.addItem(r_no);
        }
                
            }
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_genderActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(studentDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(studentDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(studentDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(studentDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new studentDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField feePaid;
    private javax.swing.JComboBox<String> gender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private org.jdesktop.swingx.JXDatePicker pick;
    private javax.swing.JTextField rType;
    private javax.swing.JComboBox<Integer> roomnoCombo;
    private javax.swing.JTextField sName;
    private javax.swing.JButton submitButton;
    private javax.swing.JTextField totalFee;
    // End of variables declaration//GEN-END:variables
}
